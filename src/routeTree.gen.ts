/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ToolsWordCounterImport } from './routes/tools/word-counter'
import { Route as ToolsVideoTrimmerImport } from './routes/tools/video-trimmer'
import { Route as ToolsLoremIpsumImport } from './routes/tools/lorem-ipsum'
import { Route as ToolsImagePaletteGeneratorImport } from './routes/tools/image-palette-generator'
import { Route as ToolsImageCropperImport } from './routes/tools/image-cropper'
import { Route as ToolsImageCompressorImport } from './routes/tools/image-compressor'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ToolsWordCounterRoute = ToolsWordCounterImport.update({
  id: '/tools/word-counter',
  path: '/tools/word-counter',
  getParentRoute: () => rootRoute,
} as any)

const ToolsVideoTrimmerRoute = ToolsVideoTrimmerImport.update({
  id: '/tools/video-trimmer',
  path: '/tools/video-trimmer',
  getParentRoute: () => rootRoute,
} as any)

const ToolsLoremIpsumRoute = ToolsLoremIpsumImport.update({
  id: '/tools/lorem-ipsum',
  path: '/tools/lorem-ipsum',
  getParentRoute: () => rootRoute,
} as any)

const ToolsImagePaletteGeneratorRoute = ToolsImagePaletteGeneratorImport.update(
  {
    id: '/tools/image-palette-generator',
    path: '/tools/image-palette-generator',
    getParentRoute: () => rootRoute,
  } as any,
)

const ToolsImageCropperRoute = ToolsImageCropperImport.update({
  id: '/tools/image-cropper',
  path: '/tools/image-cropper',
  getParentRoute: () => rootRoute,
} as any)

const ToolsImageCompressorRoute = ToolsImageCompressorImport.update({
  id: '/tools/image-compressor',
  path: '/tools/image-compressor',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/tools/image-compressor': {
      id: '/tools/image-compressor'
      path: '/tools/image-compressor'
      fullPath: '/tools/image-compressor'
      preLoaderRoute: typeof ToolsImageCompressorImport
      parentRoute: typeof rootRoute
    }
    '/tools/image-cropper': {
      id: '/tools/image-cropper'
      path: '/tools/image-cropper'
      fullPath: '/tools/image-cropper'
      preLoaderRoute: typeof ToolsImageCropperImport
      parentRoute: typeof rootRoute
    }
    '/tools/image-palette-generator': {
      id: '/tools/image-palette-generator'
      path: '/tools/image-palette-generator'
      fullPath: '/tools/image-palette-generator'
      preLoaderRoute: typeof ToolsImagePaletteGeneratorImport
      parentRoute: typeof rootRoute
    }
    '/tools/lorem-ipsum': {
      id: '/tools/lorem-ipsum'
      path: '/tools/lorem-ipsum'
      fullPath: '/tools/lorem-ipsum'
      preLoaderRoute: typeof ToolsLoremIpsumImport
      parentRoute: typeof rootRoute
    }
    '/tools/video-trimmer': {
      id: '/tools/video-trimmer'
      path: '/tools/video-trimmer'
      fullPath: '/tools/video-trimmer'
      preLoaderRoute: typeof ToolsVideoTrimmerImport
      parentRoute: typeof rootRoute
    }
    '/tools/word-counter': {
      id: '/tools/word-counter'
      path: '/tools/word-counter'
      fullPath: '/tools/word-counter'
      preLoaderRoute: typeof ToolsWordCounterImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/tools/image-compressor': typeof ToolsImageCompressorRoute
  '/tools/image-cropper': typeof ToolsImageCropperRoute
  '/tools/image-palette-generator': typeof ToolsImagePaletteGeneratorRoute
  '/tools/lorem-ipsum': typeof ToolsLoremIpsumRoute
  '/tools/video-trimmer': typeof ToolsVideoTrimmerRoute
  '/tools/word-counter': typeof ToolsWordCounterRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/tools/image-compressor': typeof ToolsImageCompressorRoute
  '/tools/image-cropper': typeof ToolsImageCropperRoute
  '/tools/image-palette-generator': typeof ToolsImagePaletteGeneratorRoute
  '/tools/lorem-ipsum': typeof ToolsLoremIpsumRoute
  '/tools/video-trimmer': typeof ToolsVideoTrimmerRoute
  '/tools/word-counter': typeof ToolsWordCounterRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/tools/image-compressor': typeof ToolsImageCompressorRoute
  '/tools/image-cropper': typeof ToolsImageCropperRoute
  '/tools/image-palette-generator': typeof ToolsImagePaletteGeneratorRoute
  '/tools/lorem-ipsum': typeof ToolsLoremIpsumRoute
  '/tools/video-trimmer': typeof ToolsVideoTrimmerRoute
  '/tools/word-counter': typeof ToolsWordCounterRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/tools/image-compressor'
    | '/tools/image-cropper'
    | '/tools/image-palette-generator'
    | '/tools/lorem-ipsum'
    | '/tools/video-trimmer'
    | '/tools/word-counter'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/tools/image-compressor'
    | '/tools/image-cropper'
    | '/tools/image-palette-generator'
    | '/tools/lorem-ipsum'
    | '/tools/video-trimmer'
    | '/tools/word-counter'
  id:
    | '__root__'
    | '/'
    | '/tools/image-compressor'
    | '/tools/image-cropper'
    | '/tools/image-palette-generator'
    | '/tools/lorem-ipsum'
    | '/tools/video-trimmer'
    | '/tools/word-counter'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ToolsImageCompressorRoute: typeof ToolsImageCompressorRoute
  ToolsImageCropperRoute: typeof ToolsImageCropperRoute
  ToolsImagePaletteGeneratorRoute: typeof ToolsImagePaletteGeneratorRoute
  ToolsLoremIpsumRoute: typeof ToolsLoremIpsumRoute
  ToolsVideoTrimmerRoute: typeof ToolsVideoTrimmerRoute
  ToolsWordCounterRoute: typeof ToolsWordCounterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ToolsImageCompressorRoute: ToolsImageCompressorRoute,
  ToolsImageCropperRoute: ToolsImageCropperRoute,
  ToolsImagePaletteGeneratorRoute: ToolsImagePaletteGeneratorRoute,
  ToolsLoremIpsumRoute: ToolsLoremIpsumRoute,
  ToolsVideoTrimmerRoute: ToolsVideoTrimmerRoute,
  ToolsWordCounterRoute: ToolsWordCounterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/tools/image-compressor",
        "/tools/image-cropper",
        "/tools/image-palette-generator",
        "/tools/lorem-ipsum",
        "/tools/video-trimmer",
        "/tools/word-counter"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/tools/image-compressor": {
      "filePath": "tools/image-compressor.tsx"
    },
    "/tools/image-cropper": {
      "filePath": "tools/image-cropper.tsx"
    },
    "/tools/image-palette-generator": {
      "filePath": "tools/image-palette-generator.tsx"
    },
    "/tools/lorem-ipsum": {
      "filePath": "tools/lorem-ipsum.tsx"
    },
    "/tools/video-trimmer": {
      "filePath": "tools/video-trimmer.tsx"
    },
    "/tools/word-counter": {
      "filePath": "tools/word-counter.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
