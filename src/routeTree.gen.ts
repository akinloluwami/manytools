/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VideoTrimmerImport } from './routes/video-trimmer'
import { Route as LoremIpsumImport } from './routes/lorem-ipsum'
import { Route as ImagePaletteGeneratorImport } from './routes/image-palette-generator'
import { Route as ImageCompressorImport } from './routes/image-compressor'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const VideoTrimmerRoute = VideoTrimmerImport.update({
  id: '/video-trimmer',
  path: '/video-trimmer',
  getParentRoute: () => rootRoute,
} as any)

const LoremIpsumRoute = LoremIpsumImport.update({
  id: '/lorem-ipsum',
  path: '/lorem-ipsum',
  getParentRoute: () => rootRoute,
} as any)

const ImagePaletteGeneratorRoute = ImagePaletteGeneratorImport.update({
  id: '/image-palette-generator',
  path: '/image-palette-generator',
  getParentRoute: () => rootRoute,
} as any)

const ImageCompressorRoute = ImageCompressorImport.update({
  id: '/image-compressor',
  path: '/image-compressor',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/image-compressor': {
      id: '/image-compressor'
      path: '/image-compressor'
      fullPath: '/image-compressor'
      preLoaderRoute: typeof ImageCompressorImport
      parentRoute: typeof rootRoute
    }
    '/image-palette-generator': {
      id: '/image-palette-generator'
      path: '/image-palette-generator'
      fullPath: '/image-palette-generator'
      preLoaderRoute: typeof ImagePaletteGeneratorImport
      parentRoute: typeof rootRoute
    }
    '/lorem-ipsum': {
      id: '/lorem-ipsum'
      path: '/lorem-ipsum'
      fullPath: '/lorem-ipsum'
      preLoaderRoute: typeof LoremIpsumImport
      parentRoute: typeof rootRoute
    }
    '/video-trimmer': {
      id: '/video-trimmer'
      path: '/video-trimmer'
      fullPath: '/video-trimmer'
      preLoaderRoute: typeof VideoTrimmerImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/image-compressor': typeof ImageCompressorRoute
  '/image-palette-generator': typeof ImagePaletteGeneratorRoute
  '/lorem-ipsum': typeof LoremIpsumRoute
  '/video-trimmer': typeof VideoTrimmerRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/image-compressor': typeof ImageCompressorRoute
  '/image-palette-generator': typeof ImagePaletteGeneratorRoute
  '/lorem-ipsum': typeof LoremIpsumRoute
  '/video-trimmer': typeof VideoTrimmerRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/image-compressor': typeof ImageCompressorRoute
  '/image-palette-generator': typeof ImagePaletteGeneratorRoute
  '/lorem-ipsum': typeof LoremIpsumRoute
  '/video-trimmer': typeof VideoTrimmerRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/image-compressor'
    | '/image-palette-generator'
    | '/lorem-ipsum'
    | '/video-trimmer'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/image-compressor'
    | '/image-palette-generator'
    | '/lorem-ipsum'
    | '/video-trimmer'
  id:
    | '__root__'
    | '/'
    | '/image-compressor'
    | '/image-palette-generator'
    | '/lorem-ipsum'
    | '/video-trimmer'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ImageCompressorRoute: typeof ImageCompressorRoute
  ImagePaletteGeneratorRoute: typeof ImagePaletteGeneratorRoute
  LoremIpsumRoute: typeof LoremIpsumRoute
  VideoTrimmerRoute: typeof VideoTrimmerRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ImageCompressorRoute: ImageCompressorRoute,
  ImagePaletteGeneratorRoute: ImagePaletteGeneratorRoute,
  LoremIpsumRoute: LoremIpsumRoute,
  VideoTrimmerRoute: VideoTrimmerRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/image-compressor",
        "/image-palette-generator",
        "/lorem-ipsum",
        "/video-trimmer"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/image-compressor": {
      "filePath": "image-compressor.tsx"
    },
    "/image-palette-generator": {
      "filePath": "image-palette-generator.tsx"
    },
    "/lorem-ipsum": {
      "filePath": "lorem-ipsum.tsx"
    },
    "/video-trimmer": {
      "filePath": "video-trimmer.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
